plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.dylabo'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // postgresql
    runtimeOnly 'org.postgresql:postgresql'

    // opensearch
    implementation 'org.opensearch.client:opensearch-java:2.10.0'

    // httpclient5
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'

    // parquet 저장
    implementation 'org.apache.parquet:parquet-avro:1.13.0'
    implementation 'org.apache.hadoop:hadoop-common:3.2.3'
    implementation 'org.apache.hadoop:hadoop-client:3.2.3'

    // modelmapper
    implementation 'org.modelmapper:modelmapper:3.1.0'

    // SLF4J와 Logback을 기본으로 사용
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'ch.qos.logback:logback-classic:1.4.11'

    // 불필요한 로깅 구현체 제거
    configurations.all {
        exclude group: 'org.slf4j', module: 'slf4j-reload4j'
        exclude group: 'ch.qos.reload4j', module: 'reload4j'
    }

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('bootJar') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
    useJUnitPlatform()
}
